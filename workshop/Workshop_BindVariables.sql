CONNECT sh@TESTDB/sh
CREATE OR REPLACE PACKAGE sh.CHAPTER4 AS
  PROCEDURE WORKLOAD_NOBIND;
  PROCEDURE WORKLOAD_BIND;
  PROCEDURE WORKLOAD_BIND_STATIC;
  PROCEDURE TEST_INJECTION(NAME IN sh.customers.cust_last_name%TYPE);
  PROCEDURE TEST_INJECTION2(NAME IN sh.customers.cust_last_name%TYPE);
END;
/
CREATE OR REPLACE PACKAGE BODY sh.CHAPTER4 AS
  PROCEDURE TEST_NOBIND(CUSTID IN sh.customers.cust_id%TYPE) IS
  BEGIN
    DECLARE aRow sh.customers%ROWTYPE;
	  l_stmt VARCHAR2(2000);
	BEGIN
	  l_stmt := 'SELECT * FROM sh.customers s WHERE s.cust_id = ' || TO_CHAR (CUSTID);
	  EXECUTE IMMEDIATE l_stmt INTO aRow;
	END;
  END TEST_NOBIND;
  
  PROCEDURE TEST_BIND(CUSTID IN sh.customers.cust_id%TYPE) IS
  BEGIN
    DECLARE aRow sh.customers%ROWTYPE;
	  l_stmt VARCHAR2(2000);
	BEGIN
	  l_stmt := 'SELECT * FROM sh.customers s WHERE s.cust_id = :p_cust_id';
	  EXECUTE IMMEDIATE l_stmt INTO aRow USING CUSTID;
	END;
  END TEST_BIND;

  PROCEDURE TEST_BIND_STATIC(CUSTID IN sh.customers.cust_id%TYPE) IS
  BEGIN
    DECLARE aRow sh.customers%ROWTYPE;
	BEGIN
	  SELECT * INTO aROW FROM sh.customers s WHERE s.cust_id = CUSTID;
	EXCEPTION
	  WHEN NO_DATA_FOUND THEN
	    NULL;
	END;
  END TEST_BIND_STATIC;

  PROCEDURE WORKLOAD_NOBIND IS
  BEGIN
    FOR i IN 1..50000
	LOOP
	  TEST_NOBIND(i);
	END LOOP;
  END WORKLOAD_NOBIND;
  
  PROCEDURE WORKLOAD_BIND IS
  BEGIN
    FOR i IN 1..50000
	LOOP
	  TEST_BIND(i);
	END LOOP;
  END WORKLOAD_BIND;
  
  PROCEDURE WORKLOAD_BIND_STATIC IS
  BEGIN
    FOR i IN 1..50000
	LOOP
	  TEST_BIND_STATIC(i);
	END LOOP;
  END WORKLOAD_BIND_STATIC;
  
  PROCEDURE TEST_INJECTION(NAME IN sh.customers.cust_last_name%TYPE) IS
  BEGIN
    DECLARE l_stmt VARCHAR2(2000); res NUMBER;
	BEGIN
	  l_stmt := 'SELECT COUNT(*) FROM sh.customers s WHERE s.cust_last_name = ''' || NAME || '''';
	  EXECUTE IMMEDIATE l_stmt INTO res;
	  DBMS_OUTPUT.PUT_LINE('Count: ' || TO_CHAR(res));
	END;
  END TEST_INJECTION;

  PROCEDURE TEST_INJECTION2(NAME IN sh.customers.cust_last_name%TYPE) IS
  BEGIN
    DECLARE l_stmt VARCHAR2(2000); 
	BEGIN
	  l_stmt := 'BEGIN DBMS_OUTPUT.PUT_LINE (''You passed ' || NAME || '''); END;';
	  EXECUTE IMMEDIATE l_stmt;
	END;
  END TEST_INJECTION2;
END;
/

CONNECT / AS SYSDBA
ALTER SYSTEM FLUSH SHARED_POOL;
SET TIMING ON
exec sh.CHAPTER4.WORKLOAD_NOBIND;
SET TIMING OFF
ALTER SYSTEM FLUSH SHARED_POOL;
SET TIMING ON
exec sh.CHAPTER4.WORKLOAD_BIND;
SET TIMING OFF
ALTER SYSTEM FLUSH SHARED_POOL;
SET TIMING ON
exec sh.CHAPTER4.WORKLOAD_BIND_STATIC;
SET TIMING OFF

SET SERVEROUTPUT ON
exec sh.CHAPTER4.TEST_INJECTION('Hanson');
exec sh.CHAPTER4.TEST_INJECTION(''' or 1=1--');

CREATE TABLE sh.TEST_INJ (ID INT, NAME VARCHAR2(100));
INSERT INTO sh.TEST_INJ 
  SELECT cust_id, cust_first_name FROM sh.customers WHERE ROWNUM < 101;
exec sh.CHAPTER4.TEST_INJECTION2('foo');
SELECT COUNT(*) FROM sh.TEST_INJ;
exec sh.CHAPTER4.TEST_INJECTION2('hacked'');DELETE FROM sh.TEST_INJ WHERE ''a'' = lower(''a');
SELECT COUNT(*) FROM sh.TEST_INJ;
DROP TABLE sh.TEST_INJ;

DROP PACKAGE sh.CHAPTER4;
